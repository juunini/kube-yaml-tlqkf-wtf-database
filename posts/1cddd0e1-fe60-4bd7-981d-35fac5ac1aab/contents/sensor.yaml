apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: $NAMESPACE
  namespace: $NAMESPACE
spec:
  dependencies:
    - eventName: ci-event
      eventSourceName: $NAMESPACE
      name: $NAMESPACE
  template:
    serviceAccountName: $NAMESPACE
  triggers:
    - template:
        k8s:
          operation: create
          parameters:
            - dest: spec.templates.1.inputs.parameters.0.value
              src:
                dataTemplate:
                  '"{{ (index .Input.body.push.changes 0).new.target.hash
                  | substr 0 7 }}"'
                dependencyName: ci
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: ci-
                namespace: $NAMESPACE
              spec:
                entrypoint: main
                templates:
                  - dag:
                      tasks:
                        - name: image
                          template: image
                        - depends: image
                          name: sync-argo-cd
                          template: sync-argo-cd
                    name: main
                  - container:
                      args:
                        - build
                        - --frontend
                        - dockerfile.v0
                        - --local
                        - context=.
                        - --local
                        - dockerfile=.
                        - --output
                        - type=image,name=$CONTAINER_REGISTRY_ADDRESS/$CONTAINER_TAG,push=true
                      command:
                        - buildctl-daemonless.sh
                      env:
                        - name: BUILDKITD_FLAGS
                          value: --oci-worker-no-process-sandbox
                        - name: DOCKER_CONFIG
                          value: /.docker
                      image: moby/buildkit:v0.11.0-rootless
                      securityContext:
                        privileged: true
                      volumeMounts:
                        - mountPath: /.docker
                          name: docker-config
                      workingDir: /work
                    inputs:
                      artifacts:
                        - git:
                            branch: $GIT_BRANCH
                            depth: 1
                            repo: $GIT_REPOSITORY
                            singleBranch: true
                            sshPrivateKeySecret:
                              key: private-key
                              name: git-ssh-key
                          name: source
                          path: /work
                      parameters:
                        - name: tag
                    name: image
                    volumes:
                      - name: docker-config
                        secret:
                          secretName: docker-config
                  - container:
                      args:
                        - |-
                          apk --no-cache add curl
                          TOKEN=$(curl -s -k $ARGOCD_SERVER/api/v1/session -d "{\"username\":\"admin\",\"password\":\"$PASSWORD\"}" | sed -e 's/{"token":"//' | sed -e 's/"}//')
                          curl -k -X POST $ARGOCD_SERVER/api/v1/applications/my-awesome-app/sync -H "Authorization: Bearer $TOKEN"                          
                      command:
                        - sh
                        - -xuce
                      env:
                        - name: ARGOCD_SERVER
                          valueFrom:
                            secretKeyRef:
                              key: argocd-server
                              name: argocd-config
                        - name: PASSWORD
                          valueFrom:
                            secretKeyRef:
                              key: password
                              name: argocd-config
                      image: alpine:3.17
                    name: sync-argo-cd
                volumeClaimTemplates:
                  - metadata:
                      name: work
                    spec:
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 64Mi
        name: ci-workflow-trigger